{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gregory Santosa\\\\Desktop\\\\Fall2022HW\\\\personal\\\\cse186\\\\Assignment8\\\\frontend\\\\src\\\\__tests__\\\\ZZZ.test.js\";\nimport { render, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { screen } from '@testing-library/react';\nimport { rest } from 'msw';\nimport { setupServer } from 'msw/node';\nimport Home from '../Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst molly = {\n  name: 'Molly Member',\n  accessToken: 'some-old-jwt'\n};\nconst subjects = ['Dwayne the', 'Rocks??'];\nconst inbox = [{\n  'mailbox': {\n    'Name': 'Molly Member',\n    'Owner': 'molly@books.com'\n  },\n  'mail': {\n    'to': {\n      'name': 'Molly Member',\n      'email': 'molly@books.com'\n    },\n    'from': {\n      'name': 'Dwayne',\n      'email': 'dwayne@rock.com'\n    },\n    'sent': '2022-11-30T23:00:00Z',\n    'Mailbox': 'Inbox',\n    'content': 'Rock content',\n    'subject': 'Dwayne the Rock Wants to Speak',\n    'received': '2022-11-30T23:00:00Z',\n    'read': 600,\n    'favorite': 'grey'\n  }\n}, {\n  'mailbox': {\n    'Name': 'Molly Member',\n    'Owner': 'molly@books.com'\n  },\n  'mail': {\n    'to': {\n      'name': 'Molly Member',\n      'email': 'molly@books.com'\n    },\n    'from': {\n      'name': 'Rock',\n      'email': 'yesterday@yes.com'\n    },\n    'sent': '2022-11-29T23:00:00Z',\n    'Mailbox': 'Inbox',\n    'content': 'I love rocks, you should too',\n    'subject': 'Rocks??',\n    'received': '2022-11-29T23:00:00Z',\n    'read': 600,\n    'favorite': 'grey'\n  }\n}, {\n  'mailbox': {\n    'Name': 'Molly Member',\n    'Owner': 'molly@books.com'\n  },\n  'mail': {\n    'to': {\n      'name': 'Molly Member',\n      'email': 'molly@books.com'\n    },\n    'from': {\n      'name': 'I am the sent Man',\n      'email': 'jbone@myspace.com'\n    },\n    'sent': '2022-01-01T23:17:19Z',\n    'Mailbox': 'Sent',\n    'content': 'We are in Sent',\n    'subject': 'After inbox I gave up on making content',\n    'received': '2022-01-01T23:17:19Z',\n    'read': 600,\n    'favorite': 'grey'\n  }\n}, {\n  'mailbox': {\n    'Name': 'Anna Admin',\n    'Owner': 'anna@books.com'\n  },\n  'mail': {\n    'to': {\n      'name': 'Anna Admin',\n      'email': 'anna@books.com'\n    },\n    'from': {\n      'name': 'Buck Jacob',\n      'email': 'jbuck@trash.com'\n    },\n    'sent': '2022-11-18T17:09:17Z',\n    'Mailbox': 'Trash',\n    'content': 'Happy Feet is a popular movie from the 2000s',\n    'subject': 'Happy Feet',\n    'received': '2022-11-18T23:11:19Z',\n    'read': 600,\n    'favorite': 'grey'\n  }\n}, {\n  'mailbox': {\n    'Name': 'Molly Member',\n    'Owner': 'molly@books.com'\n  },\n  'mail': {\n    'to': {\n      'name': 'Molly Member',\n      'email': 'molly@books.com'\n    },\n    'from': {\n      'name': 'Jonathan Boneparte',\n      'email': 'jbone@myspace.com'\n    },\n    'sent': '2022-11-15T17:09:17Z',\n    'Mailbox': 'Trash',\n    'content': 'We are in the trash',\n    'subject': 'Trash message 2022',\n    'received': '2022-11-15T23:17:19Z',\n    'read': 600,\n    'favorite': 'grey'\n  }\n}];\nlet box = undefined;\nconst URL = 'http://localhost:3010/v0/Mailbox?mailbox=Inbox';\nconst server = setupServer(rest.get(URL, (req, res, ctx) => {\n  return box ? res(ctx.json(box)) : res(ctx.status(404, 'Unknown mailbox'));\n}));\nbeforeAll(() => {\n  localStorage.setItem('user', JSON.stringify(molly));\n  server.listen();\n});\nafterEach(() => server.resetHandlers());\nafterAll(() => server.close());\ntest('Unknown box', async () => {\n  box = undefined;\n  render( /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 10\n  }, this));\n});\ntest('Unknown mailbox', async () => {\n  const mailbox = 'Unknown';\n  box = undefined;\n  render( /*#__PURE__*/_jsxDEV(SharedContext.Provider, {\n    value: {\n      mailbox\n    },\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this));\n});","map":{"version":3,"names":["render","fireEvent","screen","rest","setupServer","Home","molly","name","accessToken","subjects","inbox","box","undefined","URL","server","get","req","res","ctx","json","status","beforeAll","localStorage","setItem","JSON","stringify","listen","afterEach","resetHandlers","afterAll","close","test","mailbox"],"sources":["C:/Users/Gregory Santosa/Desktop/Fall2022HW/personal/cse186/Assignment8/frontend/src/__tests__/ZZZ.test.js"],"sourcesContent":["import {render, fireEvent} from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport {screen} from '@testing-library/react';\nimport {rest} from 'msw';\nimport {setupServer} from 'msw/node';\n\nimport Home from '../Home';\n\nconst molly = {\n  name: 'Molly Member',\n  accessToken: 'some-old-jwt',\n};\n\nconst subjects = ['Dwayne the', 'Rocks??'];\n\nconst inbox = [\n  {\n    'mailbox': {\n      'Name': 'Molly Member',\n      'Owner': 'molly@books.com',\n    },\n    'mail': {\n      'to': {\n        'name': 'Molly Member',\n        'email': 'molly@books.com',\n      },\n      'from': {\n        'name': 'Dwayne',\n        'email': 'dwayne@rock.com',\n      },\n      'sent': '2022-11-30T23:00:00Z',\n      'Mailbox': 'Inbox',\n      'content': 'Rock content',\n      'subject': 'Dwayne the Rock Wants to Speak',\n      'received': '2022-11-30T23:00:00Z',\n      'read': 600,\n      'favorite': 'grey',\n    },\n  },\n  {\n    'mailbox': {\n      'Name': 'Molly Member',\n      'Owner': 'molly@books.com',\n    },\n    'mail': {\n      'to': {\n        'name': 'Molly Member',\n        'email': 'molly@books.com',\n      },\n      'from': {\n        'name': 'Rock',\n        'email': 'yesterday@yes.com',\n      },\n      'sent': '2022-11-29T23:00:00Z',\n      'Mailbox': 'Inbox',\n      'content': 'I love rocks, you should too',\n      'subject': 'Rocks??',\n      'received': '2022-11-29T23:00:00Z',\n      'read': 600,\n      'favorite': 'grey',\n    },\n  },\n  {\n    'mailbox': {\n      'Name': 'Molly Member',\n      'Owner': 'molly@books.com',\n    },\n    'mail': {\n      'to': {\n        'name': 'Molly Member',\n        'email': 'molly@books.com',\n      },\n      'from': {\n        'name': 'I am the sent Man',\n        'email': 'jbone@myspace.com',\n      },\n      'sent': '2022-01-01T23:17:19Z',\n      'Mailbox': 'Sent',\n      'content': 'We are in Sent',\n      'subject': 'After inbox I gave up on making content',\n      'received': '2022-01-01T23:17:19Z',\n      'read': 600,\n      'favorite': 'grey',\n    },\n  },\n  {\n    'mailbox': {\n      'Name': 'Anna Admin',\n      'Owner': 'anna@books.com',\n    },\n    'mail': {\n      'to': {\n        'name': 'Anna Admin',\n        'email': 'anna@books.com',\n      },\n      'from': {\n        'name': 'Buck Jacob',\n        'email': 'jbuck@trash.com',\n      },\n      'sent': '2022-11-18T17:09:17Z',\n      'Mailbox': 'Trash',\n      'content': 'Happy Feet is a popular movie from the 2000s',\n      'subject': 'Happy Feet',\n      'received': '2022-11-18T23:11:19Z',\n      'read': 600,\n      'favorite': 'grey',\n    },\n  },\n  {\n    'mailbox': {\n      'Name': 'Molly Member',\n      'Owner': 'molly@books.com',\n    },\n    'mail': {\n      'to': {\n        'name': 'Molly Member',\n        'email': 'molly@books.com',\n      },\n      'from': {\n        'name': 'Jonathan Boneparte',\n        'email': 'jbone@myspace.com',\n      },\n      'sent': '2022-11-15T17:09:17Z',\n      'Mailbox': 'Trash',\n      'content': 'We are in the trash',\n      'subject': 'Trash message 2022',\n      'received': '2022-11-15T23:17:19Z',\n      'read': 600,\n      'favorite': 'grey',\n    },\n  },\n];\n\nlet box = undefined;\n\nconst URL = 'http://localhost:3010/v0/Mailbox?mailbox=Inbox';\n\nconst server = setupServer(\n  rest.get(URL, (req, res, ctx) => {\n    return box ? res(ctx.json(box)) :\n      res(ctx.status(404, 'Unknown mailbox'));\n  }),\n);\n\nbeforeAll(() => {\n  localStorage.setItem('user', JSON.stringify(molly));\n  server.listen();\n});\nafterEach(() => server.resetHandlers());\nafterAll(() => server.close());\n\ntest('Unknown box', async () => {\n  box = undefined;\n  render(<Home />);\n});\n\ntest('Unknown mailbox', async () => {\n  const mailbox = 'Unknown';\n  box = undefined;\n  render(\n    <SharedContext.Provider value = {{mailbox}}><Home /></SharedContext.Provider>,\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}