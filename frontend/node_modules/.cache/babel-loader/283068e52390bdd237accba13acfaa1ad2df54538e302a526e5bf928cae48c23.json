{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = void 0;\nvar NodeClientRequest_1 = require(\"./NodeClientRequest\");\nvar normalizeClientRequestArgs_1 = require(\"./utils/normalizeClientRequestArgs\");\nfunction get(protocol, options) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var clientRequestArgs = normalizeClientRequestArgs_1.normalizeClientRequestArgs.apply(void 0, __spreadArray([protocol + \":\"], __read(args)));\n    var request = new NodeClientRequest_1.NodeClientRequest(clientRequestArgs, options);\n    /**\n     * @note https://nodejs.org/api/http.html#httpgetoptions-callback\n     * \"http.get\" sets the method to \"GET\" and calls \"req.end()\" automatically.\n     */\n    request.end();\n    return request;\n  };\n}\nexports.get = get;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAKA;AAKA,SAAgBA,GAAG,CAACC,QAAkB,EAAEC,OAA0B;EAChE,OAAO;IAAC;SAAA,UAA0B,EAA1BC,qBAA0B,EAA1BA,IAA0B;MAA1BC;;IACN,IAAMC,iBAAiB,GAAGC,uDAA0B,8BAC/CL,QAAQ,MAAG,UACXG,IAAI,GACR;IACD,IAAMG,OAAO,GAAG,IAAIC,qCAAiB,CAACH,iBAAiB,EAAEH,OAAO,CAAC;IAEjE;;;;IAIAK,OAAO,CAACE,GAAG,EAAE;IAEb,OAAOF,OAAO;EAChB,CAAC;AACH;AAhBAG","names":["get","protocol","options","_i","args","clientRequestArgs","normalizeClientRequestArgs_1","request","NodeClientRequest_1","end","exports"],"sources":["C:\\Users\\Gregory Santosa\\Desktop\\Fall2022HW\\personal\\cse186\\Assignment8\\frontend\\node_modules\\@mswjs\\interceptors\\src\\interceptors\\ClientRequest\\http.get.ts"],"sourcesContent":["import { ClientRequest } from 'node:http'\nimport {\n  NodeClientOptions,\n  NodeClientRequest,\n  Protocol,\n} from './NodeClientRequest'\nimport {\n  ClientRequestArgs,\n  normalizeClientRequestArgs,\n} from './utils/normalizeClientRequestArgs'\n\nexport function get(protocol: Protocol, options: NodeClientOptions) {\n  return (...args: ClientRequestArgs): ClientRequest => {\n    const clientRequestArgs = normalizeClientRequestArgs(\n      `${protocol}:`,\n      ...args\n    )\n    const request = new NodeClientRequest(clientRequestArgs, options)\n\n    /**\n     * @note https://nodejs.org/api/http.html#httpgetoptions-callback\n     * \"http.get\" sets the method to \"GET\" and calls \"req.end()\" automatically.\n     */\n    request.end()\n\n    return request\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}